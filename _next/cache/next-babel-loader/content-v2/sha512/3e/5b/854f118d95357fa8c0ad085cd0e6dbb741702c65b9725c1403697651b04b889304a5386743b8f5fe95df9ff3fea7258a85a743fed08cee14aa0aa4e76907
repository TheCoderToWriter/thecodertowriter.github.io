{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Layout } from '../components/index';\nimport { htmlToReact, withPrefix, markdownify } from '../utils';\nimport FormField from '../components/FormField';\nexport default class Contact extends React.Component {\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const config = _.get(data, 'config');\n\n    const page = _.get(this.props, 'page');\n\n    const title = _.get(page, 'title');\n\n    const subtitle = _.get(page, 'subtitle');\n\n    const image = _.get(page, 'img_path');\n\n    const imageAlt = _.get(page, 'img_alt', '');\n\n    const formId = _.get(page, 'form_id');\n\n    const formAction = _.get(page, 'form_action');\n\n    const formFields = _.get(page, 'form_fields');\n\n    const submitLabel = _.get(page, 'submit_label');\n\n    const formHoneypotInputId = formId + '-honeypot';\n    const formHoneypotLabelId = formId + '-honeypot-label';\n    const formHoneypotName = formId + '-bot-field';\n\n    const markdownContent = _.get(page, 'markdown_content');\n\n    return /*#__PURE__*/_jsx(Layout, {\n      page: page,\n      config: config,\n      children: /*#__PURE__*/_jsxs(\"article\", {\n        className: \"post page post-full\",\n        children: [/*#__PURE__*/_jsxs(\"header\", {\n          className: \"post-header inner-md\",\n          children: [/*#__PURE__*/_jsx(\"h1\", {\n            className: \"post-title\",\n            children: title\n          }), subtitle && /*#__PURE__*/_jsx(\"div\", {\n            className: \"post-subtitle\",\n            children: htmlToReact(subtitle)\n          })]\n        }), image && /*#__PURE__*/_jsx(\"div\", {\n          className: \"post-thumbnail\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            className: \"thumbnail\",\n            src: withPrefix(image),\n            alt: imageAlt\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"post-content inner-md\",\n          children: [markdownContent && markdownify(markdownContent), /*#__PURE__*/_jsxs(\"form\", _objectSpread(_objectSpread({\n            name: formId,\n            id: formId\n          }, formAction ? {\n            action: formAction\n          } : null), {}, {\n            method: \"POST\",\n            \"data-netlify\": \"true\",\n            \"data-netlify-honeypot\": formHoneypotName,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"screen-reader-text\",\n              children: /*#__PURE__*/_jsxs(\"label\", {\n                id: formHoneypotLabelId,\n                htmlFor: formHoneypotInputId,\n                children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsx(\"input\", {\n                  \"aria-labelledby\": formHoneypotLabelId,\n                  id: formHoneypotInputId,\n                  name: formHoneypotName\n                })]\n              })\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"hidden\",\n              name: \"form-name\",\n              value: formId\n            }), _.map(formFields, (field, index) => /*#__PURE__*/_jsx(FormField, {\n              field: field\n            }, index)), /*#__PURE__*/_jsx(\"div\", {\n              className: \"form-submit\",\n              children: /*#__PURE__*/_jsx(\"button\", {\n                type: \"submit\",\n                className: \"button\",\n                children: submitLabel\n              })\n            })]\n          }))]\n        })]\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}