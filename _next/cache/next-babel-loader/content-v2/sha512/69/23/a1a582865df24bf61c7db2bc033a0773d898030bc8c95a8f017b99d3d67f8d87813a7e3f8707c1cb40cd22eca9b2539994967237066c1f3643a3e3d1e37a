{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nexport default class FormField extends React.Component {\n  render() {\n    const field = _.get(this.props, 'field');\n\n    const inputType = _.get(field, 'input_type');\n\n    const name = _.get(field, 'name');\n\n    const defaultValue = _.get(field, 'default_value');\n\n    const options = _.get(field, 'options');\n\n    const required = _.get(field, 'is_required');\n\n    const label = _.get(field, 'label');\n\n    const labelId = `${name}-label`;\n    const attr = {};\n\n    if (label) {\n      attr['aria-labelledby'] = labelId;\n    }\n\n    if (required) {\n      attr.required = true;\n    }\n\n    switch (inputType) {\n      case 'checkbox':\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group form-checkbox\",\n          children: [/*#__PURE__*/_jsx(\"input\", _objectSpread({\n            type: \"checkbox\",\n            id: name,\n            name: name\n          }, attr)), label && /*#__PURE__*/_jsx(\"label\", {\n            htmlFor: name,\n            children: label\n          })]\n        });\n\n      case 'select':\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [label && /*#__PURE__*/_jsx(\"label\", {\n            htmlFor: name,\n            children: label\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"form-select-wrap\",\n            children: /*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({\n              id: name,\n              name: name\n            }, attr), {}, {\n              children: [defaultValue && /*#__PURE__*/_jsx(\"option\", {\n                value: \"\",\n                children: defaultValue\n              }), _.map(options, (option, index) => /*#__PURE__*/_jsx(\"option\", {\n                value: option,\n                children: option\n              }, index))]\n            }))\n          })]\n        });\n\n      case 'textarea':\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [label && /*#__PURE__*/_jsx(\"label\", {\n            htmlFor: name,\n            children: label\n          }), /*#__PURE__*/_jsx(\"textarea\", _objectSpread(_objectSpread({\n            name: name,\n            id: name,\n            rows: \"7\"\n          }, defaultValue ? {\n            placeholder: defaultValue\n          } : null), attr))]\n        });\n\n      default:\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [label && /*#__PURE__*/_jsx(\"label\", {\n            htmlFor: name,\n            children: label\n          }), /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({\n            type: inputType,\n            name: name,\n            id: name\n          }, defaultValue ? {\n            placeholder: defaultValue\n          } : null), attr)), /*#__PURE__*/_jsx(\"span\", {\n            className: \"animate-border\",\n            \"aria-hidden\": \"true\"\n          })]\n        });\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}