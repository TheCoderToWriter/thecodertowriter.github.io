{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\n\nvar FormField = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormField, _React$Component);\n\n  var _super = _createSuper(FormField);\n\n  function FormField() {\n    _classCallCheck(this, FormField);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FormField, [{\n    key: \"render\",\n    value: function render() {\n      var field = _.get(this.props, 'field');\n\n      var inputType = _.get(field, 'input_type');\n\n      var name = _.get(field, 'name');\n\n      var defaultValue = _.get(field, 'default_value');\n\n      var options = _.get(field, 'options');\n\n      var required = _.get(field, 'is_required');\n\n      var label = _.get(field, 'label');\n\n      var labelId = \"\".concat(name, \"-label\");\n      var attr = {};\n\n      if (label) {\n        attr['aria-labelledby'] = labelId;\n      }\n\n      if (required) {\n        attr.required = true;\n      }\n\n      switch (inputType) {\n        case 'checkbox':\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group form-checkbox\",\n            children: [/*#__PURE__*/_jsx(\"input\", _objectSpread({\n              type: \"checkbox\",\n              id: name,\n              name: name\n            }, attr)), label && /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: name,\n              children: label\n            })]\n          });\n\n        case 'select':\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group\",\n            children: [label && /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: name,\n              children: label\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"form-select-wrap\",\n              children: /*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({\n                id: name,\n                name: name\n              }, attr), {}, {\n                children: [defaultValue && /*#__PURE__*/_jsx(\"option\", {\n                  value: \"\",\n                  children: defaultValue\n                }), _.map(options, function (option, index) {\n                  return /*#__PURE__*/_jsx(\"option\", {\n                    value: option,\n                    children: option\n                  }, index);\n                })]\n              }))\n            })]\n          });\n\n        case 'textarea':\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group\",\n            children: [label && /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: name,\n              children: label\n            }), /*#__PURE__*/_jsx(\"textarea\", _objectSpread(_objectSpread({\n              name: name,\n              id: name,\n              rows: \"7\"\n            }, defaultValue ? {\n              placeholder: defaultValue\n            } : null), attr))]\n          });\n\n        default:\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group\",\n            children: [label && /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: name,\n              children: label\n            }), /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({\n              type: inputType,\n              name: name,\n              id: name\n            }, defaultValue ? {\n              placeholder: defaultValue\n            } : null), attr)), /*#__PURE__*/_jsx(\"span\", {\n              className: \"animate-border\",\n              \"aria-hidden\": \"true\"\n            })]\n          });\n      }\n    }\n  }]);\n\n  return FormField;\n}(React.Component);\n\nexport { FormField as default };","map":null,"metadata":{},"sourceType":"module"}