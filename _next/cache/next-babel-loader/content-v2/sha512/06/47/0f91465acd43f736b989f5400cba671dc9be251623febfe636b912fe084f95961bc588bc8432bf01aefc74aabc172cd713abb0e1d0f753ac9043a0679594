{"ast":null,"code":"import _defineProperty from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/work/codertowriter/codertowriter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Layout } from '../components/index';\nimport { htmlToReact, withPrefix, markdownify } from '../utils';\nimport FormField from '../components/FormField';\n\nvar Contact = /*#__PURE__*/function (_React$Component) {\n  _inherits(Contact, _React$Component);\n\n  var _super = _createSuper(Contact);\n\n  function Contact() {\n    _classCallCheck(this, Contact);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var data = _.get(this.props, 'data');\n\n      var config = _.get(data, 'config');\n\n      var page = _.get(this.props, 'page');\n\n      var title = _.get(page, 'title');\n\n      var subtitle = _.get(page, 'subtitle');\n\n      var image = _.get(page, 'img_path');\n\n      var imageAlt = _.get(page, 'img_alt', '');\n\n      var formId = _.get(page, 'form_id');\n\n      var formAction = _.get(page, 'form_action');\n\n      var formFields = _.get(page, 'form_fields');\n\n      var submitLabel = _.get(page, 'submit_label');\n\n      var formHoneypotInputId = formId + '-honeypot';\n      var formHoneypotLabelId = formId + '-honeypot-label';\n      var formHoneypotName = formId + '-bot-field';\n\n      var markdownContent = _.get(page, 'markdown_content');\n\n      return /*#__PURE__*/_jsx(Layout, {\n        page: page,\n        config: config,\n        children: /*#__PURE__*/_jsxs(\"article\", {\n          className: \"post page post-full\",\n          children: [/*#__PURE__*/_jsxs(\"header\", {\n            className: \"post-header inner-md\",\n            children: [/*#__PURE__*/_jsx(\"h1\", {\n              className: \"post-title\",\n              children: title\n            }), subtitle && /*#__PURE__*/_jsx(\"div\", {\n              className: \"post-subtitle\",\n              children: htmlToReact(subtitle)\n            })]\n          }), image && /*#__PURE__*/_jsx(\"div\", {\n            className: \"post-thumbnail\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              className: \"thumbnail\",\n              src: withPrefix(image),\n              alt: imageAlt\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"post-content inner-md\",\n            children: [markdownContent && markdownify(markdownContent), /*#__PURE__*/_jsxs(\"form\", _objectSpread(_objectSpread({\n              name: formId,\n              id: formId\n            }, formAction ? {\n              action: formAction\n            } : null), {}, {\n              method: \"POST\",\n              \"data-netlify\": \"true\",\n              \"data-netlify-honeypot\": formHoneypotName,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"screen-reader-text\",\n                children: /*#__PURE__*/_jsxs(\"label\", {\n                  id: formHoneypotLabelId,\n                  htmlFor: formHoneypotInputId,\n                  children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsx(\"input\", {\n                    \"aria-labelledby\": formHoneypotLabelId,\n                    id: formHoneypotInputId,\n                    name: formHoneypotName\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"hidden\",\n                name: \"form-name\",\n                value: formId\n              }), _.map(formFields, function (field, index) {\n                return /*#__PURE__*/_jsx(FormField, {\n                  field: field\n                }, index);\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-submit\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"submit\",\n                  className: \"button\",\n                  children: submitLabel\n                })\n              })]\n            }))]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Contact;\n}(React.Component);\n\nexport { Contact as default };","map":null,"metadata":{},"sourceType":"module"}